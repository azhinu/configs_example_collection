
; Required global vars MAIL_TO; MAIL_FROM; TG_ACCESS_TOKEN;
[queue-hangup]
exten => s,1,NoOp(Queue hangup notification)
; Send E-mail notification
same => n,System(echo -e "To: ${MAIL_TO}\nFrom: ${MAIL_FROM}\nSubject: Сброшен звонок в основной очереди\n\nСброшен звонок с номера ${CALLERID(num)} в ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}" | msmtp -t)

; TG
; "disable_notification" = true means that user will not get a sound notification from this message.
same => n,System(curl  -X POST  -H 'Content-Type: application/json' -d '{"chat_id": "<TG User ID>", "text": "Сброшен звонок в основной очереди. Номер: ${CALLERID(num)}", "disable_notification": true}' https://api.telegram.org/bot${TG_ACCESS_TOKEN}/sendMessage)


;Context called by custom destination.
[main-queue-timeout]
; Play busy sound
exten => s,1,Playback("custom/Busy")
; Send E-mail notification
same => n,System(echo -e "To: ${MAIL_TO}\nFrom: ${MAIL_FROM}\nSubject: Звонок сброшен по таймауту\n\nЗвонок в очереди сброшен по таймауту, проверьте заявки. Абонент: ${CALLERID(num)} Время: ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}" | msmtp -t)
; Send Telegram notification
same => n,System(curl  -X POST  -H 'Content-Type: application/json' -d '{"chat_id": "<TG User ID>", "text": "Звонок в очереди сброшен по таймауту: ${CALLERID(num)}", "disable_notification": true}' https://api.telegram.org/bot${TG_ACCESS_TOKEN}/sendMessage)
; Go to Group voice mail
same => n,Goto(vmblast-grp,10010,1)


; Context called by time condition.
[main-no-working-hours]
exten => s,1,NoOp(Handled call in non working time)
; Send E-mail notification
same => n,System(echo -e "To: ${MAIL_TO}\nFrom: ${MAIL_FROM}\nSubject: Звонок в нерабочее время\n\nЗвонок с номера ${CALLERID(num)} в ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}" | msmtp -t)
; Send TG notification
same => n,System(curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "<TG User ID>", "text": "Сброшен звонок в нерабочее время. Номер: ${CALLERID(num)}", "disable_notification": true}' https://api.telegram.org/bot${TG_ACCESS_TOKEN}/sendMessage)
; To go no-working-hours announcement
same => n,Goto(app-announcement-2,s,1)


;Bitrix interation helper
; [bx-helper]
; exten => s,1,NoOp(Bitrix helper started)
; exten => s,n,Set(CallMeDURATION=${CDR(billsec)})
; exten => s,n,Set(FullFname=${BX_REC_URL}/${YEAR}/${MONTH}/${DAY}/${CALLFILENAME}.mp3
; exten => s,n,ExecIF(${ISNULL(${CallMeDISPOSITION})}?Set(CallMeDISPOSITION=${CDR(disposition)}):NoOP(=== CallMeDISPOSITION already was set ===))
; exten => s,n,System(mkdir -p ${BX_REC_DIR}/${YEAR}/${MONTH}/${DAY}/);
; exten => s,n,System(nice -n 19  /usr/bin/lame -h -b 32 /var/spool/asterisk/monitor/${YEAR}/${MONTH}/${DAY}/${CALLFILENAME}.${MON_FMT} ${BX_REC_DIR}/${YEAR}/${MONTH}/${DAY}/${CALLFILENAME}.mp3)
; exten => s,n,System(curl -s http://127.0.0.1:81/CallMeOut.php --data action=sendcall2b24 --data call_id=${CallMeCALL_ID} --data-urlencode FullFname=${FullFname} --data CallIntNum=${CallIntNum} --data CallDuration=${CallMeDURATION} --data-urlencode CallDisposition=${CallMeDISPOSITION})
; exten => s,n,NoOp(Bitrix helper ended)
; exten => s,n,Return()

;Testing section
[azhinu-test]
exten => s,1,NoOp(Azhinu test section)
;Try to execute command and register result.
same => n,Set(result=${SHELL( <some command> )});
same => n,NoOp(result is ${result});
same => n,Hangup()
